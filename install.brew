#!/bin/sh
# Install homebrew (if missing) or update it (if not). Install or update
# desired packages. Also install/update cask along with desired packages.
#
# This script is not intended to be stand-alone. It's intended to be source'd
# from `install`. In particular, we need $DEV_PATH to be defined. Further, in
# case of error, this script aborts by using "return 1", which is how you exit
# a source'd script.


# Get homebrew if I don't already have it.

if ! is_executable brew
then
    echo
    echo "*** Cloning Homebrew repository"
    echo

    /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
fi

if [[ "$(uname -m)" == "arm64" ]]
then
    HOMEBREW_PREFIX="/opt/homebrew"   # For ASi systems.
else
    HOMEBREW_PREFIX="/usr/local"
fi
prepend_path "${HOMEBREW_PREFIX}/sbin"
prepend_path "${HOMEBREW_PREFIX}/bin"

if ! is_executable brew
then
    echo "### Could not find brew executable after installing"
    return 1
fi

BREW_DEV_PATH="${DEV_PATH}/brew"
if [[ -h "${BREW_DEV_PATH}" ]]
then
    true
elif [[ -e "${BREW_DEV_PATH}" ]]
then
    echo "### Unable to install Homebrew: ${BREW_DEV_PATH} already exists and is not a symlink"
    return 1
else
    ln -s "${HOMEBREW_PREFIX}" "${BREW_DEV_PATH}"
fi

# Don't go leaking information about what OS I'm running.
# (Don't turn this off any more, since I no longer work at Apple.)

# brew analytics off

# Update any apps I may already have installed.
# NOTE: Take this out. I think I prefer doing it manually.

if false
then
    echo
    echo "*** Upgrading Homebrew and installed Homebrew apps"
    echo

    dont_sleep brew upgrade || {
        echo "### Unable to update/upgrade brew"
        return 1
    }
fi


# Install the apps I want.

echo
echo "*** Installing Homebrew apps"
echo

# Some tools to consider from:
#
#   https://github.com/mathiasbynens/dotfiles/blob/master/brew.sh
#
# coreutils, moreutils, multimarkdown, findutils, gnu-sed, bash,
# bash-completion2, wget, vim, grep, openssh, screen, git, git-lfs, lynx,
# pigz, pv, speedtest-cli, zopfli
#
# New to explore from https://remysharp.com/2018/08/23/cli-improved
# htop
# bat
# fd
# ncdu
# nnn
# tldr
#
# Also:
#   bash-git-prompt
#   kylef/formulae/swiftenv
#   hub            # Maybe some other time. Never got into it. Also, check out gitless.
#   shellcheck     # Nice, but expensive. Requires ghc, which takes over an hour to install.

# Tap into here for swiftenv.

# brew tap kylef/formulae

# Install as source (formulae) or pre-built (bottles).
APPS=(
    bat             # Clone of cat(1) with syntax highlighting and Git integration
    broot           # New way to see and navigate directory trees
    clang-format
    cmake
    dust            # More intuitive version of du in rust
    exa             # Modern replacement for 'ls'
    fd              # Simple, fast and user-friendly alternative to find
    fzf
    git
    github-keygen
    htop            # Improved top (interactive process viewer)
    jsonpp          # Command-line JSON pretty-printer
    ninja
    nvim            # Ambitious Vim-fork focused on extensibility and agility
    procs           # Modern replacement for ps written by Rust
    python
    # qlmarkdown    # Remove this; trying to install twice causes an error, which aborts overall install
    ripgrep
    starship        # Cross-shell prompt for astronauts
    telnet
    tldr            # Simplified and community-driven man pages
    tokei           # Program that allows you to count code, quickly
    tree
    vim
    watch

    # For NeoVIM
    tree-sitter
    luajit

    # For SerenityOS
    coreutils e2fsprogs qemu bash gcc@11 imagemagick ninja cmake ccache rsync
    genext2fs
)

# Install pre-built Mac binaries.
CASKS=(
    emacs           # Recommended to install as cask in order to get GUI support
    font-inconsolata-nerd-font
    font-ubuntu-mono-nerd-font
)

dont_sleep brew tap homebrew/cask-fonts     # For the nerd-fonts

dont_sleep brew install "${APPS[@]}"
dont_sleep brew install --cask "${CASKS[@]}"

# Universal-ctags is its own project and should be installed from HEAD.
dont_sleep brew install --HEAD universal-ctags/universal-ctags/universal-ctags

# Prevent the following errors/messages when starting zsh:
#
# zsh compinit: insecure directories, run compaudit for list.
# Ignore insecure directories and continue [y] or abort compinit [n]?

if [ "$HOST_SHELL" = zsh ]
then
    compaudit | xargs chmod g-w
    compaudit | xargs chown root
fi

unset HOMEBREW_PREFIX
unset BREW_DEV_PATH
unset APPS
unset CASKS
