#!/bin/bash

# TBD: Maybe make use of something like the following:

# text_reset="$(tput sgr0)" # turn off all attributes
# text_bold="$(tput bold)"
# text_underline="$(tput smul)"
# text_blink="$(tput blink)"

# text_color_reset="$(tput setaf 0)"
# text_color_burgundy="$(tput setaf 1)"
# text_color_green="$(tput setaf 2)"
# text_color_yellow="$(tput setaf 3)"
# text_color_blue="$(tput setaf 4)"
# text_color_magenta="$(tput setaf 5)"
# text_color_cyan="$(tput setaf 6)"
# text_color_light="$(tput setaf 7)"
# text_color_gray="$(tput setaf 8)"
# text_color_red="$(tput setaf 9)"
# text_color_orange="$(tput setaf 166)"

# func_underline() {
#   printf "${text_underline}%s${text_reset}\n" ${1+"$@"}
# }

# PS1 escape characters

Date="\d"
Escape="\e"
ShortHost="\h"
FullHost="\H"
Time24="\t"
Time12="\T"
UserName="\u"
WorkingDirPath="\w"
WorkingDirName="\W"
HistoryNumber="\!"
StdPromptPrefix="\$"
BeginSeq="\["
EndSeq="\]"

# Sequences to set text colors.
# See <https://en.wikipedia.org/wiki/ANSI_escape_code>
#
# In short, we want to build:
#
#	<ESC>[ attr1 ; attr2 ; attr3 code

Csi="$Escape["	# Prefix (Control Sequence Introducer -- CSI)

## Attributes for setting text colors

Rst="0"		# Reset/Normal
Bld="1"		# Bold
Dim="2"		# Dim
# ...
Fg="30"		# Foreground
Bg="40"		# Background
Fgi="90"	# Foreground - high intensity
Bgi="100"	# Background - high intensity

## Command code for setting text colors

Sgr="m"		# Set SGR (Select Graphic Rendition) parameters

## Add these to the fg/bg attributes above to specify which color you want.

Blk="0"		# Black
Red="1"		# Red
Grn="2"		# Green
Ylw="3"		# Yellow
Blu="4"		# Blue
Mgn="5"		# Magenta
Cyn="6"		# Cyan
Wht="7"		# White

# Take 1-3 attributes and return the fully-built command, bracketted by the
# sequences needed to specify non-printing characters in PS1.

function make-color {
	if (( "$#" == 1 )); then
		echo "$BeginSeq$Csi$1$Sgr$EndSeq"
	elif (( "$#" == 2 )); then
		echo "$BeginSeq$Csi$1;$2$Sgr$EndSeq"
	elif (( "$#" == 3 )); then
		echo "$BeginSeq$Csi$1;$2;$3$Sgr$EndSeq"
	fi
}

Reset="$(make-color "$Rst")"

FgBlk="$(make-color "$Rst" "$(( $Fg + $Blk ))" )"
FgRed="$(make-color "$Rst" "$(( $Fg + $Red ))" )"
FgGrn="$(make-color "$Rst" "$(( $Fg + $Grn ))" )"
FgYlw="$(make-color "$Rst" "$(( $Fg + $Ylw ))" )"
FgBlu="$(make-color "$Rst" "$(( $Fg + $Blu ))" )"
FgMgn="$(make-color "$Rst" "$(( $Fg + $Mgn ))" )"
FgCyn="$(make-color "$Rst" "$(( $Fg + $Cyn ))" )"
FgWht="$(make-color "$Rst" "$(( $Fg + $Wht ))" )"

BgBlk="$(make-color "$Rst" "$(( $Bg + $Blk ))" )"
BgRed="$(make-color "$Rst" "$(( $Bg + $Red ))" )"
BgGrn="$(make-color "$Rst" "$(( $Bg + $Grn ))" )"
BgYlw="$(make-color "$Rst" "$(( $Bg + $Ylw ))" )"
BgBlu="$(make-color "$Rst" "$(( $Bg + $Blu ))" )"
BgMgn="$(make-color "$Rst" "$(( $Bg + $Mgn ))" )"
BgCyn="$(make-color "$Rst" "$(( $Bg + $Cyn ))" )"
BgWht="$(make-color "$Rst" "$(( $Bg + $Wht ))" )"

FgiBlk="$(make-color "$Rst" "$(( $Fgi + $Blk ))" )"
FgiRed="$(make-color "$Rst" "$(( $Fgi + $Red ))" )"
FgiGrn="$(make-color "$Rst" "$(( $Fgi + $Grn ))" )"
FgiYlw="$(make-color "$Rst" "$(( $Fgi + $Ylw ))" )"
FgiBlu="$(make-color "$Rst" "$(( $Fgi + $Blu ))" )"
FgiMgn="$(make-color "$Rst" "$(( $Fgi + $Mgn ))" )"
FgiCyn="$(make-color "$Rst" "$(( $Fgi + $Cyn ))" )"
FgiWht="$(make-color "$Rst" "$(( $Fgi + $Wht ))" )"

BgiBlk="$(make-color "$Rst" "$(( $Bgi + $Blk ))" )"
BgiRed="$(make-color "$Rst" "$(( $Bgi + $Red ))" )"
BgiGrn="$(make-color "$Rst" "$(( $Bgi + $Grn ))" )"
BgiYlw="$(make-color "$Rst" "$(( $Bgi + $Ylw ))" )"
BgiBlu="$(make-color "$Rst" "$(( $Bgi + $Blu ))" )"
BgiMgn="$(make-color "$Rst" "$(( $Bgi + $Mgn ))" )"
BgiCyn="$(make-color "$Rst" "$(( $Bgi + $Cyn ))" )"
BgiWht="$(make-color "$Rst" "$(( $Bgi + $Wht ))" )"
